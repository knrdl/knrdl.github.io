<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>en on knrdlog</title><link>https://knrdl.github.io/lang/en/</link><description>Recent content in en on knrdlog</description><language>en-us</language><copyright>Licensed under &lt;a href='https://creativecommons.org/publicdomain/zero/1.0/' target='_blank' rel='noopener norefferer'>CC0 1.0&lt;/a> |
&lt;a href="https://gohugo.io" target='_blank' rel='noopener norefferer'>Hugo&lt;/a> theme by &lt;a href="https://github.com/vamc19" target='_blank' rel='noopener norefferer'>vamc19&lt;/a> |
Hosted by &lt;a href="https://pages.github.com" target='_blank' rel='noopener norefferer'>Github&lt;/a> (&lt;a href="https://github.com/site/privacy" target='_blank' rel='noopener norefferer'>Privacy Policy&lt;/a>)</copyright><lastBuildDate>Wed, 13 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://knrdl.github.io/lang/en/index.xml" rel="self" type="application/rss+xml"/><item><title>SSH Tunneling</title><link>https://knrdl.github.io/posts/ssh-tunneling/</link><pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/ssh-tunneling/</guid><description>&lt;p>SSH allows tcp port forwarding between ssh client and ssh server as part of the encrypted ssh connection.&lt;/p>
&lt;h2 id="server--client-local" class="paragraph-header">Server → Client (local) &lt;a
href="#server--client-local">&lt;/a>&lt;/h2>
&lt;p>A socket on the server (source) gets forwarded to the client (target).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -L target_ip:target_port:source_ip:source_port
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-case-1-admin-software" class="paragraph-header">Use case 1: Admin software &lt;a
href="#use-case-1-admin-software">&lt;/a>&lt;/h3>
&lt;p>Server socket with port 9000 will be available on client machine at port 5000.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -L 127.0.0.1:5000:127.0.0.1:9000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Useful if admin software is only accessible on the server (localhost binding) and not exposed to the network.&lt;/p>
&lt;h3 id="use-case-2-quick-demo" class="paragraph-header">Use Case 2: Quick demo &lt;a
href="#use-case-2-quick-demo">&lt;/a>&lt;/h3>
&lt;p>Server socket with port 9000 will be accessible at client network on port 8080 of the client machine.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -L 8080:127.0.0.1:9000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh user@host -L 0.0.0.0:8080:127.0.0.1:9000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Useful for a quick demo of a service running in a different network (e.g. cloud) to multiple participants in the same
network (e.g. company).&lt;/p>
&lt;h3 id="use-case-3-jump-host" class="paragraph-header">Use case 3: Jump Host &lt;a
href="#use-case-3-jump-host">&lt;/a>&lt;/h3>
&lt;p>Server can reach host with ip addr 192.168.1.15. Service on 192.168.1.15:8080 will be available on client machine at
port 8081.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -L 127.0.0.1:8081:192.168.1.15:8080
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hop to hop forwarding of hosts accessible in the server network(s).&lt;/p>
&lt;h2 id="client--server-remote" class="paragraph-header">Client → Server (remote) &lt;a
href="#client--server-remote">&lt;/a>&lt;/h2>
&lt;p>A socket on the client (source) gets forwarded to the server (target).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -R target_port:source_ip:source_port
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-case-1-microservice-development" class="paragraph-header">Use case 1: Microservice development &lt;a
href="#use-case-1-microservice-development">&lt;/a>&lt;/h3>
&lt;p>Service on port 8000 of the client machine will be available on server at port 8081. Unless &lt;code>GatewayPorts&lt;/code> is set
to &lt;code>yes&lt;/code> in sshd config (default &lt;code>no&lt;/code>) the serverside bind will always be localhost (127.0.0.1).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -R 8081:127.0.0.1:8000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Useful to integrate a microservice on developer machine into a foreign environment (e.g. test cluster). Also works with
other source addresses than &lt;code>127.0.0.1&lt;/code>.&lt;/p>
&lt;h3 id="use-case-2-tls-terminating-web-proxy-as-a-service" class="paragraph-header">Use case 2: TLS terminating web proxy as a service &lt;a
href="#use-case-2-tls-terminating-web-proxy-as-a-service">&lt;/a>&lt;/h3>
&lt;p>Client starts a http server on local machine on port 8000. That service will be available as
&lt;a href="https://server.tld" target="_blank" rel="noopener noreferrer">https://server.tld&lt;/a>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ssh user@host -R 8001:127.0.0.1:8000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Processing order:&lt;/p>
&lt;ol>
&lt;li>Webbrowser (User Agent) requests
&lt;a href="https://server.tld" target="_blank" rel="noopener noreferrer">https://server.tld&lt;/a>
&lt;/li>
&lt;li>Reaches a reverse proxy on port 443
&lt;ul>
&lt;li>does tls termination&lt;/li>
&lt;li>and proxying, nginx: &lt;code>proxy_pass 127.0.0.1:8001;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>SSH Tunnel&lt;/li>
&lt;li>local machine port 8000 http server&lt;/li>
&lt;/ol>
&lt;h2 id="ssh-config" class="paragraph-header">SSH Config &lt;a
href="#ssh-config">&lt;/a>&lt;/h2>
&lt;p>port forwarding can also be specified on the client in &lt;code>~/.ssh/config&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>Host server-01
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HostName 192.168.1.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Port 22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User clusteradm
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#3d3f4a">&lt;span> LocalForward localhost:9001 localhost:9000
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#3d3f4a">&lt;span> RemoteForward 8001 localhost:8000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KeepAlive yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdentitiesOnly yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> IdentityFile ~/.ssh/server_01_clusteradm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Config format is &lt;code>(Local|Remote)Forward target source&lt;/code>&lt;/p>
&lt;p>connect via &lt;code>$ ssh server-01&lt;/code>&lt;/p>
&lt;h2 id="persistent-connections" class="paragraph-header">Persistent connections &lt;a
href="#persistent-connections">&lt;/a>&lt;/h2>
&lt;p>Just use the &lt;code>autossh&lt;/code> command in place of &lt;code>ssh&lt;/code>. AutoSSH uses heartbeats to check if the connection is still open and
open another one otherwise automatically and fully transparent.&lt;/p>
&lt;h2 id="dedicated-tunneling-server" class="paragraph-header">Dedicated tunneling server &lt;a
href="#dedicated-tunneling-server">&lt;/a>&lt;/h2>
&lt;p>It&amp;rsquo;s possible to run a standalone ssh server which just allows port forwarding and no remote command execution. Setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir -p /jail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adduser --gecos &lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span> --no-create-home --shell /bin/false --disabled-password --uid &lt;span style="color:#bd93f9">1000&lt;/span> sshtunnel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Excerpt from &lt;code>/etc/ssh/sshd_config&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># AllowUsers list all users which should be able to login&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AllowUsers sshtunnel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Match User sshtunnel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PermitTTY no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Banner none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> X11Forwarding no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AllowAgentForwarding no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4"># AllowTcpForwarding: yes (= local+remote), local, remote, no&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AllowTcpForwarding &lt;span style="color:#8be9fd;font-style:italic">local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GatewayPorts no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PermitTunnel no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ChrootDirectory /jail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ForceCommand /bin/false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PermitOpen 127.0.0.1:8730
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start sshd in foreground: &lt;code>$ sshd -D -e&lt;/code>&lt;/p>
&lt;p>Connect client: &lt;code>$ ssh -N -L 127.0.0.1:8730:127.0.0.1:8730 sshtunnel@localhost&lt;/code>&lt;/p>
&lt;p>Flag &lt;code>-N&lt;/code> prevents the spawning of a shell (which would result in a connection abortion otherwise).&lt;/p>
&lt;h2 id="rsync-tunneling-also-sftp" class="paragraph-header">Rsync tunneling (also sftp) &lt;a
href="#rsync-tunneling-also-sftp">&lt;/a>&lt;/h2>
&lt;p>&lt;code>rsync&lt;/code> can copy (sync) files between hosts. Therefore, it can use ssh as a transfer protocol. But that implies running
the rsync command on the server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>rsync -av -e ssh user@host:/backup/ /datadir/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That won&amp;rsquo;t work with a tunneling only ssh server. Luckily rsync can also be operated with a standalone server, so the
rsync protocol can be tunneled via ssh.&lt;/p>
&lt;h3 id="server-setup" class="paragraph-header">Server Setup &lt;a
href="#server-setup">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>adduser --gecos &lt;span style="color:#f1fa8c">&amp;#34;&amp;#34;&lt;/span> --no-create-home --shell /bin/false --disabled-password --uid &lt;span style="color:#bd93f9">1001&lt;/span> rsyncbackup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir -p /jail/backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown -R root:root /jail &lt;span style="color:#6272a4"># user cannot have write permission to chroot dir&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown -R rsyncbackup:rsyncbackup /jail/backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chmod -R &lt;span style="color:#bd93f9">755&lt;/span> /jail/backup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Excerpt from &lt;code>/etc/ssh/sshd_config&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># allow sftp connections&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Subsystem sftp internal-sftp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># AllowUsers list all users which should be able to login&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>AllowUsers rsyncbackup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Match User rsyncbackup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PermitTTY no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Banner none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> X11Forwarding no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AllowAgentForwarding no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#6272a4"># AllowTcpForwarding: yes (= local+remote), local, remote, no&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> AllowTcpForwarding &lt;span style="color:#8be9fd;font-style:italic">local&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GatewayPorts no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PermitTunnel no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ChrootDirectory /jail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ForceCommand internal-sftp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PermitOpen 127.0.0.1:8730
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In addition to rsync this config also allows file browsing via sftp in the &lt;code>/jail&lt;/code> dir.&lt;/p>
&lt;p>Rsync server config in &lt;code>/etc/rsyncd.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>use &lt;span style="color:#8be9fd;font-style:italic">chroot&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hosts &lt;span style="color:#8be9fd;font-style:italic">allow&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> 127.0.0.1/32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">port&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">8730&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">timeout&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">300&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>max &lt;span style="color:#8be9fd;font-style:italic">connections&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#bd93f9">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reverse &lt;span style="color:#8be9fd;font-style:italic">lookup&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log &lt;span style="color:#8be9fd;font-style:italic">file&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> /dev/stdout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>log &lt;span style="color:#8be9fd;font-style:italic">format&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> %h %o %f %l %b
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pid &lt;span style="color:#8be9fd;font-style:italic">file&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> /var/run/rsyncd.pid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">[&lt;/span>backup_sink&lt;span style="color:#ff79c6">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">comment&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> Backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">path&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> /jail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">read&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">only&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> no
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">list&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">uid&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> rsyncbackup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">gid&lt;/span> &lt;span style="color:#ff79c6">=&lt;/span> rsyncbackup
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start rsync server: &lt;code>$ rsync --daemon --config /etc/rsyncd.conf&lt;/code>&lt;/p>
&lt;h3 id="client-setup" class="paragraph-header">Client Setup &lt;a
href="#client-setup">&lt;/a>&lt;/h3>
&lt;p>Record in &lt;code>.ssh/config&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span> Host backup-conn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HostName 192.168.1.32
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Port &lt;span style="color:#bd93f9">2201&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> User rsyncbackup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> KeepAlive yes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LocalForward 127.0.0.1:8730 127.0.0.1:8730
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run a rsync job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>ssh -N backup-conn &amp;amp; &lt;span style="color:#6272a4"># no tty possible, either use pubkey-auth or use sshpass to submit the password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">pid&lt;/span>&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sleep &lt;span style="color:#bd93f9">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">time&lt;/span> rsync bigfile rsync://localhost:8730/backup_sink/backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">kill&lt;/span> &lt;span style="color:#8be9fd;font-style:italic">$pid&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check that &lt;code>/jail/backup/bigfile&lt;/code> has been created on the server.&lt;/p></description></item><item><title>GlusterFs Setup</title><link>https://knrdl.github.io/posts/glusterfs-setup/</link><pubDate>Mon, 11 Apr 2022 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/glusterfs-setup/</guid><description>&lt;p>GlusterFs is a distributed storage layer based on
the
&lt;a href="https://www.andrew.cmu.edu/course/15-749/READINGS/required/cas/tridgell96.pdf" target="_blank" rel="noopener noreferrer">rsync algorithm&lt;/a>
&lt;/p>
&lt;h2 id="setup" class="paragraph-header">Setup &lt;a
href="#setup">&lt;/a>&lt;/h2>
&lt;p>For best performance the traffic between nodes stays unencrypted. Such a glusterfs should only be operated in a dedicated, trustworthy network.&lt;/p>
&lt;p>The following setup will create a storage cluster on 3 nodes (node1, node2, node3) as NAS RAID1 (mirroring)&lt;/p>
&lt;h3 id="1-on-each-node" class="paragraph-header">1. On each node: &lt;a
href="#1-on-each-node">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install --no-install-recommends glusterfs-server rpcbind
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start glusterd.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl &lt;span style="color:#8be9fd;font-style:italic">enable&lt;/span> glusterd.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mkdir -p /media/storage0/gluster &lt;span style="color:#6272a4"># where cluster data should be stored&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="2-on-primary-node" class="paragraph-header">2. On primary node: &lt;a
href="#2-on-primary-node">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo gluster peer probe node1 &lt;span style="color:#6272a4"># replace node1 with real hostname&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster peer probe node2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster peer probe node3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster pool list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster volume create vol0 replica &lt;span style="color:#bd93f9">3&lt;/span> node1:/media/storage0/gluster node2:/media/storage0/gluster node3:/media/storage0/gluster force
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># force is only necessary if /media/storage0/gluster is on at least one node mounted on the root partition (and not an additional partition / drive)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster volume info
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster volume start vol0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster volume &lt;span style="color:#8be9fd;font-style:italic">set&lt;/span> vol0 auth.allow 127.0.0.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># allow connections only from localhost (each gluster-node will mount their local storage, access from other hosts in network is prevented)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gluster volume info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="3-on-each-node" class="paragraph-header">3. On each node: &lt;a
href="#3-on-each-node">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo mkdir -p /media/gluster0 &lt;span style="color:#6272a4"># where gluster gets mounted&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown -R 1000:1000 /media/gluster0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo bash -c &lt;span style="color:#f1fa8c">&amp;#39;echo &amp;#34;127.0.0.1:/vol0 /media/gluster0 glusterfs defaults,_netdev 0 0&amp;#34; &amp;gt;&amp;gt; /etc/fstab&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo mount -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="4-test" class="paragraph-header">4. Test: &lt;a
href="#4-test">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># one one node: &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">echo&lt;/span> &lt;span style="color:#f1fa8c">&amp;#34;hello world&amp;#34;&lt;/span> &amp;gt; /media/gluster0/testfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#6272a4"># on another node:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat /media/gluster0/testfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm /media/gluster0/testfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p class="warning">Never write a file/dir directly to &lt;code>/media/storage0/gluster&lt;/code>. GlusterFS won&amp;rsquo;t be able to detect the changes, and they will not be synchronised.&lt;/p>
&lt;/blockquote>
&lt;h3 id="5-on-each-node" class="paragraph-header">5. On each node: &lt;a
href="#5-on-each-node">&lt;/a>&lt;/h3>
&lt;p>Add the ip addresses of all nodes to the &lt;code>/etc/hosts&lt;/code> files to prevent cluster split on DNS outages:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>192.168.123.2 node1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.123.3 node2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.123.4 node3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Cleanup bloated postgres index</title><link>https://knrdl.github.io/posts/postgres-bloated-index/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/postgres-bloated-index/</guid><description>&lt;h2 id="1-find-db-byte-sizes" class="paragraph-header">1. find db byte sizes &lt;a
href="#1-find-db-byte-sizes">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">SELECT&lt;/span> datname, pg_size_pretty(pg_database_size(datname))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">FROM&lt;/span> pg_database
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">ORDER&lt;/span> &lt;span style="color:#ff79c6">by&lt;/span> pg_database_size(datname) &lt;span style="color:#ff79c6">DESC&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-find-tables--indices-sizes" class="paragraph-header">2. find tables + indices sizes &lt;a
href="#2-find-tables--indices-sizes">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">select&lt;/span> &lt;span style="color:#ff79c6">table_name&lt;/span>, pg_size_pretty(pg_total_relation_size(quote_ident(&lt;span style="color:#ff79c6">table_name&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">from&lt;/span> information_schema.tables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">where&lt;/span> table_schema &lt;span style="color:#ff79c6">=&lt;/span> &lt;span style="color:#f1fa8c">&amp;#39;public&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">order&lt;/span> &lt;span style="color:#ff79c6">by&lt;/span> pg_total_relation_size(quote_ident(&lt;span style="color:#ff79c6">table_name&lt;/span>)) &lt;span style="color:#ff79c6">desc&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-recreate-index" class="paragraph-header">3. recreate index &lt;a
href="#3-recreate-index">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ff79c6">REINDEX&lt;/span> &lt;span style="color:#ff79c6">TABLE&lt;/span> hungry;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conclusion" class="paragraph-header">Conclusion &lt;a
href="#conclusion">&lt;/a>&lt;/h2>
&lt;p>index shrank from ~12GiB to ~800MiB&lt;/p></description></item><item><title>Docker Swarm: `error creating vxlan interface: file exists`</title><link>https://knrdl.github.io/posts/docker-swarm-error-create-vxlan/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/docker-swarm-error-create-vxlan/</guid><description>&lt;p>If docker swarm rejects to deploy a service because network interface already exists:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ docker service ps stackname_appname --no-trunc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Rejected &lt;span style="color:#bd93f9">34&lt;/span> seconds ago &lt;span style="color:#f1fa8c">&amp;#34;network sandbox join failed: subnet sandbox join failed for &amp;#34;&lt;/span>10.0.14.0/24&lt;span style="color:#f1fa8c">&amp;#34;: error creating vxlan interface: file exists
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then find all problematic interfaces on the host and delete them:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ip -d link show | grep vx | grep DOWN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo ip link delete vx-001095-owhr8 &lt;span style="color:#6272a4"># for each entry&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now redeploying should work!&lt;/p></description></item><item><title>Svelte without node.js installation</title><link>https://knrdl.github.io/posts/svelte-without-node-installation/</link><pubDate>Sun, 10 Apr 2022 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/svelte-without-node-installation/</guid><description>&lt;p>Docker to the rescue!&lt;/p>
&lt;h2 id="setup-project" class="paragraph-header">Setup project &lt;a
href="#setup-project">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo docker run -it --rm --user &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$UID&lt;/span>&lt;span style="color:#f1fa8c">:&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$UID&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> -v &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$PWD&lt;/span>&lt;span style="color:#f1fa8c">:&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$PWD&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> -w &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$PWD&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> node:alpine npm init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="development" class="paragraph-header">Development &lt;a
href="#development">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo docker run -it --rm --user &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$UID&lt;/span>&lt;span style="color:#f1fa8c">:&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$UID&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> -v &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$PWD&lt;/span>&lt;span style="color:#f1fa8c">:&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$PWD&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> -w &lt;span style="color:#f1fa8c">&amp;#34;&lt;/span>&lt;span style="color:#8be9fd;font-style:italic">$PWD&lt;/span>&lt;span style="color:#f1fa8c">&amp;#34;&lt;/span> -p8080:8080 -p35729:35729 --env &lt;span style="color:#8be9fd;font-style:italic">HOST&lt;/span>&lt;span style="color:#ff79c6">=&lt;/span>0.0.0.0 node:alpine npm run dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open
&lt;a href="http://localhost:8080" target="_blank" rel="noopener noreferrer">localhost:8080&lt;/a>
&lt;/p>
&lt;blockquote>
&lt;p class="info">Port 35729 is live reload websocket (optional)&lt;/p>
&lt;/blockquote>
&lt;h2 id="custom-bashrc-shortcut" class="paragraph-header">Custom &lt;code>.bashrc&lt;/code> shortcut &lt;a
href="#custom-bashrc-shortcut">&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">alias&lt;/span> svelte-npm&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;sudo docker run -it --rm --user &amp;#34;$UID:$UID&amp;#34; -v &amp;#34;$PWD:$PWD&amp;#34; -w &amp;#34;$PWD&amp;#34; -p8080:8080 -p35729:35729 --env HOST=0.0.0.0 node:alpine npm&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Usage: &lt;code>$ svelte-npm run dev&lt;/code>&lt;/p>
&lt;h3 id="more-general-approach" class="paragraph-header">More general approach &lt;a
href="#more-general-approach">&lt;/a>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8be9fd;font-style:italic">alias&lt;/span> docker-dir&lt;span style="color:#ff79c6">=&lt;/span>&lt;span style="color:#f1fa8c">&amp;#39;sudo docker run -it --rm --user &amp;#34;$UID:$UID&amp;#34; -v &amp;#34;$PWD:$PWD&amp;#34; -w &amp;#34;$PWD&amp;#34; --env HOST=0.0.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Fix gitlab immense disk usage</title><link>https://knrdl.github.io/posts/gitlab-immense-disk-usage/</link><pubDate>Mon, 28 Feb 2022 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/gitlab-immense-disk-usage/</guid><description>&lt;p>The gitlab docker registry has no cleanup job per default. If an image tag gets overwritten (updated) then the original
image layer blobs will be kept as orphans. To clean those up run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>gitlab-ctl registry-garbage-collect --delete-untagged --delete-manifest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="automation" class="paragraph-header">Automation &lt;a
href="#automation">&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>run the command via Cron (the gitlab image contains &lt;code>go-crond&lt;/code>)&lt;/li>
&lt;li>set command in env var &lt;code>GITLAB_POST_RECONFIGURE_SCRIPT&lt;/code> (executed at least on each container start)&lt;/li>
&lt;/ul>
&lt;h2 id="conclusion" class="paragraph-header">Conclusion &lt;a
href="#conclusion">&lt;/a>&lt;/h2>
&lt;p>170GiB server disk storage freed&lt;/p></description></item></channel></rss>