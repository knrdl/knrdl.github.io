<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Influxdb on knrdlog</title><link>https://knrdl.github.io/tags/influxdb/</link><description>Recent content in Influxdb on knrdlog</description><language>en-us</language><copyright>Licensed under &lt;a href='https://creativecommons.org/publicdomain/zero/1.0/' target='_blank' rel='noopener norefferer'>CC0 1.0&lt;/a> |
&lt;a href="https://gohugo.io" target='_blank' rel='noopener norefferer'>Hugo&lt;/a> theme inspired by &lt;a href="https://github.com/vamc19" target='_blank' rel='noopener norefferer'>vamc19&lt;/a> |
Hosted by &lt;a href="https://pages.github.com" target='_blank' rel='noopener norefferer'>Github&lt;/a> (&lt;a href="https://github.com/site/privacy" target='_blank' rel='noopener norefferer'>Privacy Policy&lt;/a>)</copyright><lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://knrdl.github.io/tags/influxdb/index.xml" rel="self" type="application/rss+xml"/><item><title>InfluxDB v2: Single Sign On</title><link>https://knrdl.github.io/posts/influxdb2-sso/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://knrdl.github.io/posts/influxdb2-sso/</guid><description>&lt;p>The &lt;abbr title="Telegraf, InfluxDB, Chronograf, Kapacitor">TICK&lt;/abbr> stack v1 did not enforce authentication. So SSO for the Chronograf WebUI could be handled easily via the reverse proxy. InfluxDB v2 includes a WebUI on its own and therefore replaces Chronograf. As InfluxDB v2 enforces built-in authentication there must be accounts. But InfluxDB v2 has no &lt;abbr title="Single Sign On">SSO&lt;/abbr> capabilities. The solution is to create an &amp;ldquo;All Access API Token&amp;rdquo; and inject it via the reverse proxy, e.g. Caddy:&lt;/p>
&lt;pre tabindex="0">&lt;code>monitor.example.org {
reverse_proxy influxdb:8086 {
header_up Authorization &amp;#34;Token YOUR_TOKEN&amp;#34;
}
}
&lt;/code>&lt;/pre>&lt;p>Now the WebUI does not require built-in authentication anymore and it could be handled by the reverse proxy again.&lt;/p>
&lt;p>The other always working, obvious solution is to just use Grafana instead.&lt;/p></description></item></channel></rss>